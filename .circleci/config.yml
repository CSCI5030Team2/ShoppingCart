# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test-javascript:
    working_directory: ~/ShoppingCart
    docker:
       - image: cimg/node:14.20.0
    steps:
       - checkout
       - run:
           name: install dependencies
           command: cd client/shopkart && npm install --force 
      
      #  - run:
      #      name: run tests
      #      command: cd client/shopkart && npm run test --silent
  
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-compile-spring:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    working_directory: ~/springServer/
    docker:
      - image: cimg/openjdk:17.0
        #mysql image from circleCI docker hub
          #mysql image from circleCI docker hub

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: '1q2w3e4r'
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase

      # Tool to prevent race condition
      - run:
            name: install dockerize
            command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            environment:
              DOCKERIZE_VERSION: v0.6.1

      # See if db is ready
      - run:
            name: Wait for db
            command: dockerize -wait tcp://localhost:3306 -timeout 1m

     # - run: sudo apt install -y mysql-client
      - run: sudo apt-get update
      - run: sudo apt-get install mysql-client

      - run: mysql -h 127.0.0.1 -u root -p1q2w3e4r -e "create database shopping_cart"

      - run:
          name: Build
          command: mvn -B -DskipTests -f springServer/pom.xml clean package
      # Then run your tests!
      - run:
          name: compile
          command: mvn -f springServer/pom.xml compile

      # skip tests for master branch 
      - run:
          name: test
          command: mvn -f springServer/pom.xml test
      


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  backendCompiling: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-compile-spring
      - build-and-test-javascript
